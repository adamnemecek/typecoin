
Main components

Scheduler (scheduler.sml)
Main loop for dispatching events.  Global state: started in Main.

Sink (sink.sml)
Buffers incoming transmissions and dispatches them to the appropriate
handler.  Per-socket state.

Peer (peer.sml)
Peer manager: manages known peers.  Global state: initialized in Process.

Commo (commo.sml)
Communication manager: Maintains connections to active peers.  Global
state: initialized in Process.

Verify (verify.sml)
Verifies that blocks and transactions are valid.

Blockchain (blockchain.sml)
Records the blockchain, tracks which blocks are on the primary fork,
and searches for hashes.  Global state: initialized in Main.

Utxo (utxo.sml)
Maintains the UTXO (unspent transaction output) table.  Per-table state.

Process (process.sml)
Processes incoming messages and periodically polls the network.
Global state: initialized in Main.

Main (main.sml)
Starts everything up.

Go (go.sml)
For standalone execution, calls Main.main.




Bitcoin auxiliaries

Base58 (base58.sml)
Bitcoin's idiosyncratic base-58 encoding.

Chain (chain.sml)
Chain-specific (Bitcoin vs. Testnet) definitions.

Block
Datatype of Bitcoin blocks, and deserialization functions.

Message
Datatype of Bitcoin protocol messages, and serialization/deserialization
functions.

Script
Datatype of Bitcoin scripts, and serialization/deserialization
functions.

Transaction
Datatype of Bitcoin transactions, and serialization/deserialization
functions.




Libraries

Address (address.sml)
An abstraction of internet addresses.

Log (log.sml)
Logging operations.

Network (network.sml)
Network facilities, wraps the Basis's socket facilities.

Platform
Platform-specific (SML/NJ vs. MLton) definitions.

Reader (reader.sml)
Deserialization combinators.

Seed (seed.sml)
Collects entropy and manages seed file for Fortuna.

Writer (writer.sml)
Serialization combinators.
